{"version":3,"sources":["services/images-api.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Section/Section.jsx","components/Modal/Modal.jsx","components/Button/Button.jsx","App.js","index.js"],"names":["axios","defaults","baseURL","imgApi","fetchImages","query","currentPage","perPage","get","then","data","hits","length","Error","Searchbar","onSubmit","useState","setQuery","className","e","preventDefault","type","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","image","onModal","webformatURL","largeImageURL","tags","src","alt","onClick","ImageGallery","images","map","id","Section","children","modalRoot","document","querySelector","Modal","imgModal","tagsModal","onToggleModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","target","Button","App","setImages","setCurrentPage","isLoading","setIsLoading","error","setError","showModal","setShowModal","srcImageModal","setSrcImageModal","tagsImageModal","a","options","imgs","newImages","prev","message","scrollTo","top","documentElement","scrollHeight","behavior","shouldRenderLoadMoreButton","q","srcBigImage","console","log","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e0910e46.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api/';\r\n\r\n// axios.defaults.headers.common['Authorization'] =\r\n//   '20634365-1f280baa9861a1cbb9baba7ac';\r\n\r\nconst authKey = '20634365-1f280baa9861a1cbb9baba7ac';\r\n\r\nconst fetchImages = ({ query, currentPage, perPage }) => {\r\n  return axios\r\n    .get(\r\n      `?q=${query}&page=${currentPage}&key=${authKey}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n    )\r\n    .then(({ data }) => {\r\n      if (data.hits.length === 0) {\r\n        throw new Error('No images were found for your request. Try again');\r\n      }\r\n      return data.hits;\r\n    });\r\n};\r\n\r\nconst imgApi = { fetchImages };\r\n\r\nexport default imgApi;\r\n","import { useState } from 'react';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.currentTarget;\r\n\r\n    setQuery(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(query);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            name=\"inputQuery\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={query}\r\n            onChange={handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\nexport default Searchbar;\r\n","const ImageGalleryItem = ({ image, onModal }) => {\r\n  const { webformatURL, largeImageURL, tags } = image;\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onModal(largeImageURL, tags)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, onModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" images={images}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem key={image.id} image={image} onModal={onModal} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","const Section = ({ children }) => {\r\n  return <div>{children}</div>;\r\n};\r\n\r\nexport default Section;\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ imgModal, tagsModal, onToggleModal }) => {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onToggleModal();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    e.currentTarget === e.target && onToggleModal();\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={imgModal} alt={tagsModal} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import ProtoTypes from 'prop-types';\r\nconst Button = ({ onClick }) => (\r\n  <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n    <span className=\"\">Load more</span>\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onClick: ProtoTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import { useState, useEffect } from 'react';\r\nimport imgApi from './services/images-api';\r\nimport Loader from 'react-loader-spinner';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Section from './components/Section';\r\nimport Modal from './components/Modal';\r\nimport Button from './components/Button';\r\n\r\nconst App = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [perPage] = useState(12);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [srcImageModal, setSrcImageModal] = useState('');\r\n  const [tagsImageModal] = useState('');\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const options = {\r\n        query,\r\n        currentPage,\r\n        perPage,\r\n      };\r\n      setIsLoading(true);\r\n      const imgs = await imgApi.fetchImages(options);\r\n      const newImages = imgs.map(\r\n        ({ id, webformatURL, largeImageURL, tags }) => ({\r\n          id,\r\n          webformatURL,\r\n          largeImageURL,\r\n          tags,\r\n        }),\r\n      );\r\n\r\n      setImages(prev => [...prev, ...newImages]);\r\n      setCurrentPage(prev => prev + 1);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query !== '') {\r\n      setImages([]);\r\n      setCurrentPage(1);\r\n      fetchImages();\r\n    }\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    if (currentPage > 2) {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [currentPage]);\r\n\r\n  const onSubmit = q => {\r\n    setQuery(q);\r\n  };\r\n\r\n  const onToggleModal = e => {\r\n    setShowModal(prev => !prev);\r\n  };\r\n\r\n  const handleOpenModal = srcBigImage => {\r\n    console.log('Modal');\r\n    setShowModal(prev => !prev);\r\n    setSrcImageModal(srcBigImage);\r\n  };\r\n\r\n  const shouldRenderLoadMoreButton = images.length > 0 && !isLoading;\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={onSubmit}></Searchbar>\r\n      {error && <h1 className=\"Error\">{error}</h1>}\r\n\r\n      <ImageGallery images={images} onModal={handleOpenModal}></ImageGallery>\r\n      {isLoading && (\r\n        <Loader\r\n          type=\"Circles\"\r\n          color=\"#3f51b5\"\r\n          height={200}\r\n          width={200}\r\n          timeout={3000}\r\n          className=\"Loader\"\r\n        />\r\n      )}\r\n      <Section>\r\n        {shouldRenderLoadMoreButton && (\r\n          <Button className=\"Button\" onClick={fetchImages}></Button>\r\n        )}\r\n      </Section>\r\n\r\n      {showModal && (\r\n        <Modal\r\n          imgModal={srcImageModal}\r\n          tagsModal={tagsImageModal}\r\n          onToggleModal={onToggleModal}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}